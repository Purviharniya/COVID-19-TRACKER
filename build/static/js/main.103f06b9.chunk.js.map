{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css","images/covidimg.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","style","backgroundColor","boxShadow","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","active","marginTop","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","CovidImg","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.103f06b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3uLA-\",\"card\":\"Cards_card__3joRE\",\"active\":\"Cards_active__1CQIK\",\"infected\":\"Cards_infected__3NBnb\",\"recovered\":\"Cards_recovered__30Wt7\",\"deaths\":\"Cards_deaths__fl9T4\"};","import React from 'react';\r\nimport {Card, CardContent,Typography,Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data: {confirmed,recovered,deaths,lastUpdate}}) =>{\r\n\r\n   if(!confirmed){\r\n       return 'Loading.....';\r\n   }\r\n\r\n   console.log(lastUpdate);\r\n\r\n    return(\r\n\r\n        <div className={styles.container}>\r\n            <Grid container spacing={4} justify=\"center\">\r\n               <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)} style={{backgroundColor:'rgba(208,208,241,1)' ,boxShadow:'4px 4px 8px blue'}}>\r\n                   <CardContent>\r\n                       <Typography color=\"textSecondary\" gutterBottom>\r\n                            INFECTED\r\n                       </Typography>\r\n                       <Typography variant=\"h5\">\r\n                            <CountUp  start={0} end={confirmed.value} duration={2.5} separator=\",\" />\r\n                       </Typography>\r\n                       <Typography color=\"textSecondary\">\r\n                            {new Date(lastUpdate).toDateString()}\r\n                       </Typography>\r\n                       <Typography variant=\"body2\">\r\n                            Number of confirmed cases of COVID-19 \r\n                       </Typography>\r\n                   </CardContent>\r\n                </Grid> \r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.active)} style={{backgroundColor:'rgba(241,208,241,1)' ,boxShadow:'4px 4px 8px purple'}}>\r\n                   <CardContent>\r\n                       <Typography color=\"textSecondary\" gutterBottom>\r\n                            ACTIVE\r\n                       </Typography>\r\n                       <Typography variant=\"h5\">\r\n                            <CountUp  start={0} end={confirmed.value-recovered.value-deaths.value} duration={2.5} separator=\",\" />\r\n                       </Typography>\r\n                       <Typography color=\"textSecondary\">\r\n                         {new Date(lastUpdate).toDateString()}\r\n                       </Typography>\r\n                       <Typography variant=\"body2\">\r\n                            Number of Active cases of COVID-19\r\n                       </Typography>\r\n                   </CardContent>\r\n                </Grid> \r\n                <Grid item component={Card } xs={12} md={3} className={cx(styles.card,styles.deaths)} style={{backgroundColor:'rgba(241,208,208,1)' ,boxShadow:'4px 4px 8px red'}}>\r\n                   <CardContent>\r\n                       <Typography color=\"textSecondary\" gutterBottom>\r\n                            DEATHS\r\n                       </Typography>\r\n                       <Typography variant=\"h5\">\r\n                            <CountUp  start={0} end={deaths.value} duration={2.5} separator=\",\" />\r\n                       </Typography>\r\n                       <Typography color=\"textSecondary\">\r\n                         {new Date(lastUpdate).toDateString()}\r\n                       </Typography>\r\n                       <Typography variant=\"body2\">\r\n                            Number of deaths of COVID-19\r\n                       </Typography>\r\n                   </CardContent>\r\n                </Grid> \r\n                <Grid item component={Card} xs={12} md={3} className={styles.recovered} style={{backgroundColor:'rgba(208,241,208,1)' ,boxShadow:'4px 4px 8px green', marginTop:'5%'}}>\r\n                   <CardContent>\r\n                       <Typography color=\"textSecondary\" gutterBottom>\r\n                            RECOVERED\r\n                       </Typography>\r\n                       <Typography variant=\"h5\">\r\n                            <CountUp  start={0} end={recovered.value} duration={2.5} separator=\",\" />\r\n                       </Typography>\r\n                       <Typography color=\"textSecondary\">\r\n                         {new Date(lastUpdate).toDateString()}\r\n                       </Typography>\r\n                       <Typography variant=\"body2\">\r\n                            Number of recoveries of COVID-19\r\n                       </Typography>\r\n                   </CardContent>\r\n                </Grid> \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url= \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl=url;\r\n\r\n    if(country){\r\n        changeableUrl=`${url}/countries/${country}`\r\n    }\r\n\r\n    try{\r\n        const {data :{confirmed,recovered,deaths,lastUpdate}}= await axios.get(changeableUrl);\r\n\r\n        return { confirmed,recovered,deaths,lastUpdate,}\r\n        }\r\n\r\n        catch(error){\r\n            console.log(error);\r\n    }    \r\n}\r\n\r\n\r\nexport const fetchDailyData = async () => {\r\n    try{\r\n            const { data }= await axios.get(`${url}/daily`);\r\n\r\n            const modifiedData=data.map((dailyData) => ({\r\n                confirmed: dailyData.confirmed.total,\r\n                deaths: dailyData.deaths.total,\r\n                date:dailyData.reportDate,\r\n            }));\r\n\r\n            return modifiedData;\r\n    }\r\n\r\n    catch(error){\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const fetchCountries =async () => {\r\n\r\n    try{\r\n        const {data: {countries}} = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country)=>country.name);\r\n\r\n    }\r\n\r\n    catch(error){\r\n        return error;\r\n    }\r\n\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data:{confirmed,recovered,deaths},country}) =>{\r\n\r\n    const [dailyData, setDailyData]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async () =>{\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart= (\r\n        dailyData.length\r\n        ?(<Line  \r\n            data={{\r\n                labels: dailyData.map(({date})=> date),\r\n                datasets:[{\r\n                    data: dailyData.map(({confirmed})=> confirmed),\r\n                    label:\"Infected\",\r\n                    borderColor: '#3333ff',\r\n                    fill:true,\r\n                },{\r\n                    data: dailyData.map(({deaths})=> deaths),\r\n                    label:\"Deaths\",\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255,0,0,0.5)',\r\n                    fill:true,\r\n                }],\r\n            }}\r\n        />)  : null\r\n\r\n    );\r\n\r\n            const barChart=(\r\n                confirmed?(\r\n                    <Bar\r\n                        data={{\r\n                            labels: ['Infected','Active','Recovered','Deaths'],\r\n                            datasets:[{\r\n                                label:' People',\r\n                                backgroundColor: ['rgba(0,0,255,0.5)','rgba(255,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\r\n                                data:[confirmed.value,confirmed.value-recovered.value-deaths.value,recovered.value,deaths.value]\r\n                            }]\r\n                        }}\r\n                        options={{\r\n                            legend:{display:false},\r\n                            title:{display:true, text: `Current state in ${country}` }\r\n                        }}\r\n                    />\r\n                ) :null \r\n            )\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country?barChart:lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;\r\n","import React,{useState,useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange}) =>{\r\n\r\n    const [fetchedCountries,setFetchedCountries]= useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)} variant='filled'>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country,i)=><option key={i} value={country}> {country} </option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React, { Component } from 'react';\r\n\r\nimport {Cards, Chart, CountryPicker} from './components'\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\nimport CovidImg from './images/covidimg.png'\r\nclass App extends Component {\r\n\r\n  state={\r\n    data: {},\r\n    country:'',\r\n  }\r\n\r\n  async componentDidMount(){\r\n    const fetchedData= await fetchData();\r\n\r\n    this.setState({data:fetchedData});\r\n  }\r\n\r\n  handleCountryChange= async (country) =>{\r\n      const fetchedData= await fetchData(country);\r\n\r\n      this.setState({data:fetchedData, country: country});\r\n  }\r\n\r\n  render() {\r\n\r\n    const {data,country} = this.state;\r\n    \r\n    return (\r\n      <div className={styles.container}>\r\n        <img src={CovidImg} alt=\"CoVID-19\"/>\r\n        <Cards data={ data}/>\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__gQBMx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__30JQB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__EgEBw\"};","module.exports = __webpack_public_path__ + \"static/media/covidimg.d7265326.png\";"],"sourceRoot":""}